TODO:
	☐ Show champion stats individually
	☐ Show role stats individually

	☐ Load ENV VARS from .env file
		- Remove the API KEY from the code

	✔ Use the queueType to seperate matches @done(24-11-05 09:30)
		☐ Load queueTypes from the json file and save the information in a struct 

THINK ABOUT:
	☐ Create an attractive model to show to streamers
		- There should be some type of image creation with the resulting data

	☐ Why do the function analyseGames needs two arguments (games []Match and user User)? 
		+ [ ] Can we just use the User and get the matches from the user?
		+ [ ] Is the idea to be multi user or single user?

 	☐ Logs
		+ [ ] It might be interesting to have some type of LOG level (implement in the _l() function)

	☐ Performance analytics
		+ [ ] It could be nice to have some stats on the time to analysis (to scalability)

	☐ Save results:
		+ [ ] It would be nice to save the results in a JSON file somewhere, or in a database. So that they could be used later. 

### Archive:

	Work:
		- [X] Refactor the requests
		- [X] Get all matches of User
				+ [X] We should pass a user ID as the function argument (or the whole User) and return the list of matches of that user.
		- [X] Error handling
				+ [X] Key is expired?
				+ [-] UserData is returned?
						This is probably not needed because I already check if the request is OK.
						- A possible case where this could fail other than the request is if they change the endpoint properties. 
				+ [X] Check Response Code from requests, if it is different from 200, return error.
		
		- Reafactor into multiple files.
 			- [X] Separate into multiple files:
				- main.go
				- structs.go
				- utils.go
				- constants.go
	
	
